setwd("~/R scripts")
getwd()
setwd("D:/New folder/dataset/Data_Preprocessing/Data_Preprocessing")
dataset = read.csv('Data.csv')
View(dataset)
?ifelse
?ave
?mean
dataset$Age=ifelse(is.na(dataset$Age),
avg(dataset$Age,FUN=function(x)mean(x,na.rm=TRUE)),
dataset$Age
)
dataset$Age=ifelse(is.na(dataset$Age),
ave(dataset$Age,FUN=function(x)mean(x,na.rm=TRUE)),
dataset$Age
)
View(dataset)
dataset$Salary=ifelse(is.na(dataset$Salary),
ave(dataset$Salary,FUN=function(x)mean(x,na.rm=TRUE)),
dataset$Salary)
View(dataset)
dataset$Country=factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
View(dataset)
dataset$Country=factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
?as.factor
dataset$Purchased=factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
View(dataset)
# Splitting
install.packages('caTools')
library("caTools", lib.loc="~/R/win-library/3.5")
detach("package:caTools", unload=TRUE)
# Splitting
#install.packages('caTools')
library(caTools)
set.seed(0)
set.seed(0)
split=sample.split(dataset$Purchased,SplitRatio = 0.8)
split
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
View(testing_set)
View(training_set)
View(dataset)
dataset$Country=factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
View(dataset)
rm(list = ls())
dataset = read.csv('Data.csv')
dataset$Age=ifelse(is.na(dataset$Age),
ave(dataset$Age,FUN=function(x)mean(x,na.rm=TRUE)),
dataset$Age
)
dataset$Salary=ifelse(is.na(dataset$Salary),
ave(dataset$Salary,FUN=function(x)mean(x,na.rm=TRUE)),
dataset$Salary)
View(dataset)
View(dataset)
dataset$Country=factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
View(dataset)
dataset$Purchased=factor(dataset$Purchased,
levels = c('No','Yes'),
labels = c(0,1))
View(dataset)
library(caTools)
set.seed(0)
split=sample.split(dataset$Purchased,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
View(testing_set)
View(testing_set)
#feature scaling
training_set=scale(training_set)
#feature scaling
training_set[:,2:3]=scale(training_set[:,2:3])
#feature scaling
training_set[,2:3]=scale(training_set[,2:3])
training_set
testing_set[,2:3]=scale(training_set[,2:3])
View(testing_set)
dataset[!split]
dataset[which(split),]
dataset[which(!split),]
View(testing_set)
